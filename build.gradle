plugins {
    id "fabric-loom"
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.mod_name
group = project.mod_group
version = project.mod_version + "+" + project.minecraft_version

minecraft {
    accessWidener = file("src/main/resources/bodyshufflelite.accesswidener")
}

repositories {
    maven {
        name = "vini2003.dev"
        url = "https://maven.pkg.github.com/vini2003/Maven"

        credentials {
            username = System.getenv("GPR_USERNAME")
            password = System.getenv("GPR_TOKEN")
        }
    }

    maven {
        name = "JitPack"
        url = "https://jitpack.io"
    }

    maven {
        name = "Ladysnake Mods"
        url = "https://ladysnake.jfrog.io/artifactory/mods"

        content {
            includeGroup "io.github.ladysnake"
            includeGroupByRegex "io\\.github\\.onyxstudios.*"
        }
    }
}

dependencies {
    // Minecraft
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    // Yarn
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    // Fabric Loader
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"

    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    // Blade
    modImplementation "dev.vini2003:blade:${project.blade_version}"
    include "dev.vini2003:blade:${project.blade_version}"

    // Identity
    modImplementation "draylar:identity:${project.identity_version}"

    // Kotlin
    modImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${project.kotlin_version}"

    // Joda Time
    implementation "joda-time:joda-time:${project.joda_time_version}"
    include "joda-time:joda-time:${project.joda_time_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"

    it.options.release = 16
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    repositories {
        maven {
            name = "vini2003.dev"
            url = "https://maven.pkg.github.com/vini2003/Maven"

            credentials {
                username = System.getenv("GPR_USERNAME")
                password = System.getenv("GPR_TOKEN")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            groupId = project.mod_group
            artifactId = project.mod_name
            version = project.version

            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjvm-default=all']
        jvmTarget = "1.8"
    }
}
